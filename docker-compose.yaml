networks:
  app-net:
    driver: bridge

services:
  agent-assignment-service:
    build:
      context: .
      dockerfile: ./agent-assignment-service/Dockerfile
    container_name: agent-assignment-service
    restart: unless-stopped
    init: true
    networks:
      - app-net
    ports:
      - "8082:8082"
    depends_on:
      - kafka
    # env_file: ./agent-assignment-service/.env  # Uncomment if .env file exists
    # Runs as non-root user, see Dockerfile for details

  ticket-api-gateway-service:
    build:
      context: .
      dockerfile: ./ticket-api-gateway-service/Dockerfile
    container_name: ticket-api-gateway-service
    restart: unless-stopped
    init: true
    networks:
      - app-net
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    # env_file: ./ticket-api-gateway-service/.env  # Uncomment if .env file exists

  ticket-management-service:
    build:
      context: .
      dockerfile: ./ticket-management-service/Dockerfile
    container_name: ticket-management-service
    restart: unless-stopped
    init: true
    networks:
      - app-net
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    # env_file: ./ticket-management-service/.env  # Uncomment if .env file exists

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.3
    container_name: zookeeper
    restart: unless-stopped
    networks:
      - app-net
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.8.3
    container_name: kafka
    restart: unless-stopped
    networks:
      - app-net
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10

# Notes:
# - Each service runs as a non-root user (see Dockerfile for details).
# - H2 databases are in-memory and do not require persistent volumes.
# - Kafka and Zookeeper are required for inter-service messaging.
# - Uncomment the env_file lines if you add .env files to the service directories.
